---
name: Release Charts

on:
  push:
    branches:
      - master
    paths:
      - charts/**
env:
  GITHUB_TOKEN: ${{ secrets.ORG_REPO_TOKEN }}

jobs:
  release:
    if: github.repository_owner == 'khulnasoft'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ env.GITHUB_TOKEN }}

      - name: Prepare Environment
        run: pip3 install ruamel-yaml semver

      - name: Configure Git
        run: |
          git config --global user.name Khulnasoftbot
          git config --global user.email bot@cloud.khulnasoft.com

      - name: Get current version
        id: get_current_var
        run: echo "current_version=$(.github/scripts/update_versions.py get_chart_version)" >> $GITHUB_OUTPUT

      - name: Update Files
        run: .github/scripts/update_versions.py set_chart_version

      - name: Get the new version
        id: new_version_var
        run: echo "new_version=$(.github/scripts/update_versions.py get_chart_version)" >> $GITHUB_OUTPUT

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Commit new version
        id: commit_version
        continue-on-error: true
        run: |
          git commit -am "[skip ci] New Chart version to ${{ steps.new_version_var.outputs.new_version }}"
          git push

      - name: Delete release tag in case of version update commit failure
        id: delete-tag
        if: steps.commit_version.outcome == 'failure'
        run: |
          git push origin --delete "khulnasoft-${{ steps.new_version_var.outputs.new_version }}"
          git ls-remote --tags

      - name: Update Khulnasoft Infra
        if: steps.delete-tag.outcome == 'skipped'
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.ORG_REPO_TOKEN }}
          repo: ${{ secrets.GITHUB_TOKEN }}
          workflow: Khulnasoft Helm Chart Version Bump PR
          ref: master
          inputs: '{"version": "${{ steps.new_version_var.outputs.new_version }}", "previous_version": "${{ steps.get_current_var.outputs.current_version }}"}'
        continue-on-error: true
